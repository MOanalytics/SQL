CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );


1. Which song has the highest tempo?
SELECT track_name AS song, MAX(tempo)
FROM BIT_DB.Spotifydata;

2. What is the tempo of the most danceable song?
SELECT track_name AS song, MAX(danceability), tempo
FROM BIT_DB.Spotifydata;

3. Who are the top 10 artists based on popularity?
SELECT artist_name AS artist, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

4. Which artist on average has the most popular songs?
SELECT artist_name AS artist, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist
ORDER BY AVG(popularity) desc
LIMIT 1;

5. Which artists released the most and least popular songs?
SELECT artist_name AS artist, track_name AS song, popularity
FROM BIT_DB.Spotifydata
WHERE popularity = (SELECT MIN(popularity) FROM BIT_DB.Spotifydata)
UNION
SELECT artist_name AS artist, track_name AS song, popularity
FROM BIT_DB.Spotifydata
WHERE popularity = (SELECT MAX(popularity) FROM BIT_DB.Spotifydata)
LIMIT 2;




Calculate the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH popularity_average_CTE AS (
SELECT AVG(Spotifydata.popularity) AS average_popularity, Spotifydata.artist_name AS artist
FROM Spotifydata
GROUP BY artist)

SELECT artist, average_popularity, 'Top Artist' tag
FROM popularity_average_CTE
WHERE average_popularity >=90
ORDER BY average_popularity desc;
